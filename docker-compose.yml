# networks:
#   dev: 

# volumes:
#   postgres_data:
#   mongo_data:

# services:
#   nginx:
#     image: nginx:stable-alpine
#     ports:
#       - "80:80"
#     volumes:
#       - "./nginx.conf:/etc/nginx/nginx.conf"
#     depends_on:
#       - backend
#       - frontend
#     networks:
#       - dev

#   backend:
#     build:
#       context: ./backend
#     depends_on:
#       - postgres
#       - mongo
#     environment:
#       - DATABASE_URL=postgresql://postgres@localhost:5432/drug_store_db
#       - MONGO_URL=mongodb://mongo:27017/boiler
#     networks:
#       - dev

#   frontend:
#     build: 
#       context: ./frontend
#     networks:
#       - dev

#   postgres:
#     image: postgres:13
#     ports:
#       - "5432:5432"
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: boiler
#       POSTGRES_DB: drug_store_db
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     networks:
#       - dev

#   mongo:
#     image: mongo:latest
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongo_data:/data/db
#     networks:
#       - dev

networks:
  dev:

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: boiler
      POSTGRES_DB: drug_store_db
    volumes:
      # - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql

  mongo:
    image: mongo:4.4
    volumes:
      # - mongo_data:/data/db
      - ./database/init.js:/docker-entrypoint-initdb.d/init.js

  backend:
    build:
      context: ./backend
    expose:
      - "8000"
    depends_on:
      - db
      - mongo

  frontend:
    build:
      context: ./frontend
    ports:
      - "80:80"

volumes:
  postgres_data:
  mongo_data: